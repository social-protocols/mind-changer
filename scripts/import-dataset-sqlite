#!/usr/bin/env bash
# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail
set -Eeuo pipefail
# cd to root folder
cd "$(dirname "${BASH_SOURCE[0]}")/.."

# Ensure we're in the dataset directory
cd dataset

SQLITEDB=ratings.db

rm -f "$SQLITEDB"

SQL_TABLES=$(
	cat <<EOF
CREATE TABLE ratings (
    noteId INTEGER,
    raterParticipantId TEXT,
    createdAtMillis INTEGER,
    version INTEGER,
    agree INTEGER,
    disagree INTEGER,
    helpful INTEGER,
    notHelpful INTEGER,
    helpfulnessLevel TEXT,
    helpfulOther INTEGER,
    helpfulInformative INTEGER,
    helpfulClear INTEGER,
    helpfulEmpathetic INTEGER,
    helpfulGoodSources INTEGER,
    helpfulUniqueContext INTEGER,
    helpfulAddressesClaim INTEGER,
    helpfulImportantContext INTEGER,
    helpfulUnbiasedLanguage INTEGER,
    notHelpfulOther INTEGER,
    notHelpfulIncorrect INTEGER,
    notHelpfulSourcesMissingOrUnreliable INTEGER,
    notHelpfulOpinionSpeculationOrBias INTEGER,
    notHelpfulMissingKeyPoints INTEGER,
    notHelpfulOutdated INTEGER,
    notHelpfulHardToUnderstand INTEGER,
    notHelpfulArgumentativeOrBiased INTEGER,
    notHelpfulOffTopic INTEGER,
    notHelpfulSpamHarassmentOrAbuse INTEGER,
    notHelpfulIrrelevantSources INTEGER,
    notHelpfulOpinionSpeculation INTEGER,
    notHelpfulNoteNotNeeded INTEGER,
    ratedOnTweetId INTEGER
) strict;

CREATE TABLE notes (
    noteId integer PRIMARY KEY,
    noteAuthorParticipantId TEXT,
    createdAtMillis INTEGER,
    tweetId integer,
    classification TEXT,
    believable TEXT,
    harmful TEXT,
    validationDifficulty TEXT,
    misleadingOther INTEGER,
    misleadingFactualError INTEGER,
    misleadingManipulatedMedia INTEGER,
    misleadingOutdatedInformation INTEGER,
    misleadingMissingImportantContext INTEGER,
    misleadingUnverifiedClaimAsFact INTEGER,
    misleadingSatire INTEGER,
    notMisleadingOther INTEGER,
    notMisleadingFactuallyCorrect INTEGER,
    notMisleadingOutdatedButNotWhenWritten INTEGER,
    notMisleadingClearlySatire INTEGER,
    notMisleadingPersonalOpinion INTEGER,
    trustworthySources TEXT,
    summary TEXT,
    isMediaNote TEXT
) strict;

create table scores (
  noteid integer primary key,
  change real not null,
  users integer not null,
  items integer not null,
  before integer not null,
  after integer not null
) strict;

create table user_change (
  noteid integer not null,
  userid text not null,
  change real not null,
  primary key(noteid, userid)
) strict;
EOF
)

RATINGS_SQL_IMPORT=$(
	cat <<EOF
.mode tabs
.import --skip 1 /dev/stdin ratings
EOF
)

NOTES_SQL_IMPORT=$(
	cat <<EOF
.mode tabs
.import --skip 1 /dev/stdin notes
EOF
)

SQL_FINISH=$(
	cat <<EOF
.headers off

SELECT 'creating indexes...';
CREATE INDEX ratings_idx_raterParticipantId_createdAtMillis ON ratings(raterParticipantId, createdAtMillis);
CREATE INDEX ratings_idx_noteId ON ratings(noteId);
CREATE INDEX ratings_idx_createdAtMillis ON ratings(createdAtMillis);

SELECT 'optimize...';
ANALYZE;
PRAGMA optimize;
;
EOF
)

echo "importing will produce a ~22GB sqlite file."
echo "$SQL_TABLES" | sqlite3 "$SQLITEDB" --init /dev/null
# Import data using pv to show progress
pv ratings-00000.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00001.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00002.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00003.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00004.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00005.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00006.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00007.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00008.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv ratings-00009.tsv | sqlite3 "$SQLITEDB" --init <(echo "$RATINGS_SQL_IMPORT")
pv notes-00000.tsv | sqlite3 "$SQLITEDB" --init <(echo "$NOTES_SQL_IMPORT")
echo "$SQL_FINISH" | sqlite3 "$SQLITEDB" --init /dev/null

# Verify the import
echo "Verifying import..."
ls -lh "$SQLITEDB"
sqlite3 --init /dev/null "$SQLITEDB" "SELECT COUNT(*) FROM ratings;"
